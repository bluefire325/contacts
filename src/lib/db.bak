import { createClient } from '@supabase/supabase-js'
import { showAlert, ALERT_TYPE } from "$lib/alerts/alertStore";
import { closeModal } from "svelte-modals";
import { writable } from "svelte/store";


// export  let open_modal = writable(false); 
export const contacts = writable([]);
export const fullName = writable('');
export const emailInput = writable('');
export const numberInput = writable('');
export const Imageurl = writable();




const downloadImage = async (path,number) => {
  
  const { data,error } = supabase
  .storage
  .from('contacts')
  .getPublicUrl(path.split('/')[1])
  console.log(data,'halooo')

  if(error){
    alert(error)
  }else{
    const {  error } = await supabase
    .from('contacts')
    .update({ img_url: data.publicURL })
    .eq('number', number)
  }
  
};

export const uploadAvatar = async (files,number) => {
 

    if (!files || files.length === 0) {
      throw new Error("You must select an image to upload.");
    }

    const file = files[0];
    
   

    let { data,error } = await supabase.storage
      .from("contacts")
      .upload(file.name , file);


      
    console.log(data.Key,'imge data')
    if (error) {
      throw error;
    }else{console.log(downloadImage(data.Key,number), "downloadImage");

    }

 
};

export const getContacts = async () => {
 
  const { data, error } = await supabase
    .from("contacts")
    .select("*")
    .eq("contact_owner", supabase.auth.user().id);

  contacts.set(data);
  console.log(contacts, "contacts");

};



export const addContact = async (email, full_name, number, id,imgUrl) => {
  console.log("addContact");
  console.log(email, full_name, number,imgUrl)
  if(id){
    console.log(id,'hi')

    const { data, error } = await supabase
    .from('contacts')
    .update({ email: email,
      full_name: full_name,
      number: number,
      img_url:imgUrl })
    .eq('id', id)
    showAlert("Contact Edited successfully", ALERT_TYPE.SUCCESS, 2500);
      fullName.set('');
      emailInput.set('');
      numberInput.set('');
      getContacts()
      closeModal()

  }else{
    if (email != "" || full_name != "") {
      fullName.set(full_name);
      emailInput.set(email);
      numberInput.set(number);
      console.log(supabase.auth.user().id, 'data');
      const { data, error } = await supabase.from("contacts").insert([
  
        {
          email: email,
          full_name: full_name,
          contact_owner: supabase.auth.user().id,
          number: number,
          img_url:imgUrl[0].name
        },
      ]);
      getContacts()
      // uploadAvatar(imgUrl,number)
      showAlert("Contact added successfully", ALERT_TYPE.SUCCESS, 2500);
      fullName.set('');
      emailInput.set('');
      numberInput.set('');
      closeModal()
  
    } else {
      alert("Please fill the form");
    }
  }

};

export const deleteContact = async (id) => {
  const { data, error } = await supabase
    .from("contacts")
    .delete()
    .match({ id: id });
  showAlert("Contact Deleted successfully", ALERT_TYPE.DANGER, 2500);

  getContacts();
};


const supabase = createClient(
  import.meta.env.VITE_SUPABASE_URL,
  import.meta.env.VITE_SUPABASE_ANON_KEY
)

export default supabase 
